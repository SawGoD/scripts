#!/bin/bash

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
PINK='\033[0;35m'    # –∑–∞–º–µ–Ω–∏–ª–∏ —Å–∏–Ω–∏–π –Ω–∞ —Ä–æ–∑–æ–≤—ã–π
YELLOW='\033[1;33m'
CYAN='\033[0;36m'    # –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞ –Ω–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç—å
function check_port() {
    local port=$1
    if ss -tuln | grep -q ":$port "; then
        return 1  # –∑–∞–Ω—è—Ç
    else
        return 0  # —Å–≤–æ–±–æ–¥–µ–Ω
    fi
}

# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –±—ç–∫–∞–ø–∞
if [[ -f "/etc/ssh/sshd_config.bak" ]]; then
    echo -e "${PINK}üîç –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –±—ç–∫–∞–ø SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${CYAN}/etc/ssh/sshd_config.bak${NC}"
    echo -e "   ${PINK}–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${CYAN}$(stat -c %y /etc/ssh/sshd_config.bak)${NC}"
    echo ""
    read -p "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ –±—ç–∫–∞–ø–∞? (Y/n): " restore_choice
    
    if [[ "$restore_choice" =~ ^[Yy]$ ]] || [[ -z "$restore_choice" ]]; then
        echo -e "${PINK}üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ –±—ç–∫–∞–ø–∞...${NC}"
        cp /etc/ssh/sshd_config.bak /etc/ssh/sshd_config
        systemctl restart ssh
        echo -e "${GREEN}‚úÖ SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ –±—ç–∫–∞–ø–∞${NC}"
        echo -e "${GREEN}üîê SSH —Å–Ω–æ–≤–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –ø–æ—Ä—Ç—É ${CYAN}22${NC}"
        echo -e "${PINK}–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ${CYAN}ssh root@<—Ç–≤–æ–π-—Å–µ—Ä–≤–µ—Ä>${NC}"
        exit 0
    else
        echo -e "${PINK}–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π...${NC}"
    fi
    echo ""
fi

# –í–≤–æ–¥ IP –¥–ª—è whitelist
echo -e "${PINK}üîê –í–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å–∞, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à—ë–Ω –¥–æ—Å—Ç—É–ø –ø–æ SSH (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é).${NC}"
echo -e "   ${PINK}–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø –≤—Å–µ–º ‚Äî –≤–≤–µ–¥–∏—Ç–µ ${CYAN}'n'${NC} –∏ –Ω–∞–∂–º–∏—Ç–µ Enter.${NC}"

read -p "IP-–∞–¥—Ä–µ—Å–∞: " input_ips

if [[ "$input_ips" == "n" || -z "$input_ips" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –î–æ—Å—Ç—É–ø –∫ SSH –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö IP${NC}"
    whitelist_mode="any"
else
    IFS=',' read -ra ip_array <<< "$input_ips"
    whitelist_mode="custom"
fi

# –í—ã–±–æ—Ä SSH-–ø–æ—Ä—Ç–∞
while true; do
    read -p "–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π SSH-–ø–æ—Ä—Ç: " ssh_port

    if [[ ! "$ssh_port" =~ ^[0-9]+$ ]] || [ "$ssh_port" -lt 1 ] || [ "$ssh_port" -gt 65535 ]; then
        echo -e "${RED}‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–æ—Ä—Ç. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 65535.${NC}"
        continue
    fi

    if check_port "$ssh_port"; then
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $ssh_port —Å–≤–æ–±–æ–¥–µ–Ω.${NC}"
        break
    else
        echo -e "${RED}‚ùå –ü–æ—Ä—Ç $ssh_port —É–∂–µ –∑–∞–Ω—è—Ç. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π.${NC}"
    fi
done

# –í—ã–±–æ—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤
echo ""
echo -e "${PINK}–•–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã?${NC}"
echo -e "   ${PINK}${CYAN}80${NC}   (HTTP) - –¥–ª—è –≤–µ–±-—Å–∞–π—Ç–æ–≤${NC}"
echo -e "   ${PINK}${CYAN}443${NC}  (HTTPS/VPN) - –¥–ª—è –≤–µ–±-—Å–∞–π—Ç–æ–≤ –∏ VPN${NC}"
echo -e "   ${PINK}${CYAN}1080${NC} (SOCKS) - –¥–ª—è SOCKS –ø—Ä–æ–∫—Å–∏${NC}"
echo ""

read -p "–û—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç 80 (HTTP)? (y/N): " open_port_80
read -p "–û—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç 443 (HTTPS/VPN)? (Y/n): " open_port_443
read -p "–û—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç 1080 (SOCKS)? (y/N): " open_port_1080

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è 443 - –¥–∞, –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö - –Ω–µ—Ç
if [[ -z "$open_port_443" ]] || [[ "$open_port_443" =~ ^[Yy]$ ]]; then
    open_port_443="yes"
else
    open_port_443="no"
fi

if [[ "$open_port_80" =~ ^[Yy]$ ]]; then
    open_port_80="yes"
else
    open_port_80="no"
fi

if [[ "$open_port_1080" =~ ^[Yy]$ ]]; then
    open_port_1080="yes"
else
    open_port_1080="no"
fi

if [[ "$open_port_80" == "yes" ]]; then
    echo -e "${GREEN}‚úÖ –ë—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –ø–æ—Ä—Ç ${CYAN}80${NC} (HTTP)${NC}"
fi
if [[ "$open_port_443" == "yes" ]]; then
    echo -e "${GREEN}‚úÖ –ë—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –ø–æ—Ä—Ç ${CYAN}443${NC} (HTTPS/VPN)${NC}"
fi
if [[ "$open_port_1080" == "yes" ]]; then
    echo -e "${GREEN}‚úÖ –ë—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –ø–æ—Ä—Ç ${CYAN}1080${NC} (SOCKS)${NC}"
fi

# –ë—ç–∫–∞–ø SSH-–∫–æ–Ω—Ñ–∏–≥–∞
echo -e "${PINK}–î–µ–ª–∞–µ–º –±—ç–∫–∞–ø ${CYAN}/etc/ssh/sshd_config${NC} ‚Üí ${CYAN}/etc/ssh/sshd_config.bak${NC}"
cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak

# –ú–µ–Ω—è–µ–º –ø–æ—Ä—Ç SSH
sed -i "s/^#\?Port .*/Port $ssh_port/" /etc/ssh/sshd_config
systemctl restart ssh
echo -e "${GREEN}‚úÖ SSH —Ç–µ–ø–µ—Ä—å —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç ${CYAN}$ssh_port${NC}"

# üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ iptables
echo -e "${PINK}üî• –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º iptables...${NC}"

# –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞
iptables -F
iptables -X

# –ü–æ–ª–∏—Ç–∏–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

# –†–∞–∑—Ä–µ—à–∏—Ç—å loopback –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

# ‚úÖ SSH-–¥–æ—Å—Ç—É–ø –ø–æ whitelist
if [[ "$whitelist_mode" == "any" ]]; then
    iptables -A INPUT -p tcp --dport "$ssh_port" -j ACCEPT
else
    for ip in "${ip_array[@]}"; do
        trimmed_ip=$(echo "$ip" | xargs)
        iptables -A INPUT -p tcp -s "$trimmed_ip" --dport "$ssh_port" -j ACCEPT
        echo -e "   ${GREEN}üîì –†–∞–∑—Ä–µ—à—ë–Ω –¥–æ—Å—Ç—É–ø –ø–æ SSH —Å ${CYAN}$trimmed_ip${NC}"
    done
fi

# –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤
if [[ "$open_port_80" == "yes" ]]; then
    iptables -A INPUT -p tcp --dport 80 -j ACCEPT
    echo -e "   ${GREEN}üîì –†–∞–∑—Ä–µ—à—ë–Ω –ø–æ—Ä—Ç ${CYAN}80${NC} (HTTP)${NC}"
fi

if [[ "$open_port_443" == "yes" ]]; then
    iptables -A INPUT -p tcp --dport 443 -j ACCEPT
    echo -e "   ${GREEN}üîì –†–∞–∑—Ä–µ—à—ë–Ω –ø–æ—Ä—Ç ${CYAN}443${NC} (HTTPS/VPN)${NC}"
fi

if [[ "$open_port_1080" == "yes" ]]; then
    iptables -A INPUT -p tcp --dport 1080 -j ACCEPT
    echo -e "   ${GREEN}üîì –†–∞–∑—Ä–µ—à—ë–Ω –ø–æ—Ä—Ç ${CYAN}1080${NC} (SOCKS)${NC}"
fi

# –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–∫–∞–Ω–µ—Ä–æ–≤
iptables -A INPUT -p tcp ! --syn -m state --state NEW -j DROP

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ iptables
echo -e "${PINK}–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª–∞...${NC}"
apt-get update -qq
DEBIAN_FRONTEND=noninteractive apt-get install -y iptables-persistent
netfilter-persistent save

echo
echo -e "${GREEN}‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ!${NC}"
echo -e "${GREEN}üîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ SSH —Ç–µ–ø–µ—Ä—å —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç: ${CYAN}$ssh_port${NC}"
if [[ "$whitelist_mode" == "custom" ]]; then
    echo -e "${PINK}–†–∞–∑—Ä–µ—à—ë–Ω –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ —Å —É–∫–∞–∑–∞–Ω–Ω—ã—Ö IP:${NC}"
    for ip in "${ip_array[@]}"; do
        echo -e "   ${PINK}- ${CYAN}$(echo "$ip" | xargs)${NC}"
    done
else
    echo -e "${YELLOW}SSH –¥–æ—Å—Ç—É–ø–µ–Ω —Å –ª—é–±–æ–≥–æ IP-–∞–¥—Ä–µ—Å–∞${NC}"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–∏–µ –ø–æ—Ä—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã
echo -e "${PINK}–û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã:${NC}"
echo -e "   ${GREEN}- ${CYAN}$ssh_port${NC} (SSH)${NC}"
if [[ "$open_port_80" == "yes" ]]; then
    echo -e "   ${GREEN}- ${CYAN}80${NC} (HTTP)${NC}"
fi
if [[ "$open_port_443" == "yes" ]]; then
    echo -e "   ${GREEN}- ${CYAN}443${NC} (HTTPS/VPN)${NC}"
fi
if [[ "$open_port_1080" == "yes" ]]; then
    echo -e "   ${GREEN}- ${CYAN}1080${NC} (SOCKS)${NC}"
fi

echo ""
echo -e "${PINK}–ò—Å–ø–æ–ª—å–∑—É–π:${NC}"
echo -e "    ${CYAN}ssh -p $ssh_port root@<—Ç–≤–æ–π-—Å–µ—Ä–≤–µ—Ä>${NC}"
